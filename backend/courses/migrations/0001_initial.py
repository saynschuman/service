# Generated by Django 2.2b1 on 2019-04-24 11:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import upload_validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_true', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('text', models.TextField(verbose_name='Вариант ответа')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название курса')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['-created', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('title', models.CharField(max_length=255, verbose_name='Название материала')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текстовый контент')),
                ('video', models.FileField(blank=True, null=True, upload_to='course_video/', verbose_name='Видео контент')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='course_pdf/', validators=[upload_validator.FileTypeValidator(allowed_extensions=['.pdf'], allowed_types=['application/pdf'])], verbose_name='PDF контент')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активно')),
                ('is_download', models.BooleanField(default=False, verbose_name='Разрешено скачивать')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'Материалы курса',
                'verbose_name_plural': 'Материалы курсов',
                'ordering': ['title', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('tag', models.CharField(max_length=50, verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ['tag', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('title', models.CharField(max_length=255, verbose_name='Название задания')),
                ('description', models.TextField(verbose_name='Описание')),
                ('travel_time', models.TimeField(verbose_name='Время проохождения')),
                ('retake_time', models.TimeField(verbose_name='Время интервала пересдачи')),
                ('passing', models.SmallIntegerField(default=100, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Процент ответов для прохождения')),
                ('attempts', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Кол-во попыток')),
                ('is_necessarily', models.BooleanField(default=True, verbose_name='Обязательно для прохождения')),
                ('is_chance', models.BooleanField(default=True, verbose_name='Случайный вабор вопросов')),
                ('is_mix', models.BooleanField(default=True, verbose_name='Перемешать ответы')),
                ('is_miss', models.BooleanField(default=False, verbose_name='Пропускать вопросы')),
                ('is_final', models.BooleanField(default=False, verbose_name='Итоговое тестирование')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Скрывать результаты')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='courses.Material', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'ordering': ['title', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('text', models.TextField(verbose_name='Вопрос')),
                ('m_file', models.FileField(blank=True, null=True, upload_to='question_files/', verbose_name='Медиа-файл вопроса')),
                ('is_free_answer', models.BooleanField(default=False, verbose_name='Произвольный ответ')),
                ('score', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Баллы за ответ')),
                ('tasks', models.ManyToManyField(related_name='questions', to='courses.Task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Passing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('finish_time', models.DateTimeField(verbose_name='Время окончания')),
                ('success_passed', models.BooleanField(default=False, verbose_name='Успешно пройдено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_passings', to='courses.Task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Прохождение теста',
                'verbose_name_plural': 'Прохождения тестов',
                'ordering': ['-created'],
            },
        ),
    ]
